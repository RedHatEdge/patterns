---

- name: Create installation media
  hosts:
    - helper
  vars:
    install_dir: "/home/{{ ansible_user }}/ocp-install"
  pre_tasks:
    - name: Ensure nmstate is present
      ansible.builtin.package:
        name: nmstate
      become: true
    - name: Create install_dir
      ansible.builtin.file:
        path: "{{ install_dir }}"
        state: directory
        mode: '0755'
    - name: Download ocp installer
      ansible.builtin.get_url:
        url: "https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ cluster_info.version | default('stable') }}/openshift-install-linux.tar.gz"
        dest: "{{ install_dir }}"
        mode: '0755'
    - name: Extract install tooling
      ansible.builtin.unarchive:
        src: "{{ install_dir }}/openshift-install-linux.tar.gz"
        dest: "{{ install_dir }}"
        remote_src: true
    - name: Download oc CLI tool
      ansible.builtin.get_url:
        url: "https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ cluster_info.version | default('stable') }}/openshift-client-linux.tar.gz"
        dest: "{{ install_dir }}"
        mode: '0755'
    - name: Extract oc CLI tool
      ansible.builtin.unarchive:
        src: "{{ install_dir }}/openshift-client-linux.tar.gz"
        dest: "{{ install_dir }}"
        remote_src: true
    - name: Copy OC tool to /bin
      ansible.builtin.copy:
        src: "{{ install_dir }}/oc"
        dest: /bin/oc
        owner: root
        group: root
        mode: '0755'
        remote_src: true
      become: true
  tasks:
    - name: Template out install-config.yaml
      ansible.builtin.template:
        src: templates/install-config.yaml.j2
        dest: "{{ install_dir }}/install-config.yaml"
        mode: '0644'
    - name: Template out agent-config.yaml
      ansible.builtin.template:
        src: templates/agent-config.yaml.j2
        dest: "{{ install_dir }}/agent-config.yaml"
        mode: '0644'
    - name: Create installer ISO
      ansible.builtin.command:
        cmd: ./openshift-install --dir ./ agent create image
      args:
        chdir: "{{ install_dir }}/"
        creates: "{{ install_dir }}/agent.x86_64.iso"
  post_tasks:
    - name: Block for tasks to host on web server, if requested
      when:
        - host_on_webserver is defined
        - host_on_webserver
      become: true
      block:
        - name: Install web server
          ansible.builtin.dnf:
            name: httpd
        - name: Allow 80 through firewalld
          ansible.posix.firewalld:
            port: 80/tcp
            immediate: true
            permanent: true
            zone: "{{ firewalld_zone | default('public') }}"
            state: enabled
        - name: Copy iso to web location
          ansible.builtin.copy:
            src: "{{ install_dir }}/agent.x86_64.iso"
            dest: /var/www/html/
            remote_src: true